{# ajouter jQuery UI dans la page #}
<p>Afficher 
<select id="nb" class="form-control" style="display:inline;width:auto;">
{% for i in 1..14 %}<option value="{{ i }}"{% if i == nb %} selected="selected"{% endif %}>{{ i }}</option>{% endfor %}        
</select> 
distributions à partir de 
<input type="text"  class="form-control" id="datepicker" style="display:inline;width:auto;" value="{{ date }}" />
</p>
<!--<div id="datepicker"></div>
<input type="hidden" name="date" id="date" value="{{ date }}" />-->
<script type="text/javascript">
var urlTemplate = "{{ path('home') ~ urlTemplate }}";
var mois = ['Janvier','Février','Mars','Avril','Mai','Juin',
    'Juillet','Août','Septembre','Octobre','Novembre','Décembre'];  
var jours = ['Dimanche','Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi'];
var options = {
    monthNames: mois,
    monthNamesShort: ['Jan','Fév','Mar','Avr','Mai','Jun',
    'Jul','Aoû','Sep','Oct','Nov','Déc'],
    dayNames: jours,
    dayNamesShort: ['Dim','Lun','Mar','Mer','Jeu','Ven','Sam'],
    dayNamesMin: ['Di','Lu','Ma','Me','Je','Ve','Sa'],
    dateFormat: 'yy-mm-dd',
    firstDay: 1,
    prevText: '', prevStatus: 'Voir le mois précédent',
    prevJumpText: '&#x3c;&#x3c;', prevJumpStatus: 'Voir l\'année précédent',
    nextText: '', nextStatus: 'Voir le mois suivant',
    nextJumpText: '&#x3e;&#x3e;', nextJumpStatus: 'Voir l\'année suivant',
    currentText: 'Courant', currentStatus: 'Voir le mois courant',
    todayText: 'Aujourd\'hui', todayStatus: 'Voir aujourd\'hui',
    clearText: 'Effacer', clearStatus: 'Effacer la date sélectionnée',
    closeText: 'Fermer', closeStatus: 'Fermer sans modifier',
    yearStatus: 'Voir une autre année', monthStatus: 'Voir un autre mois',
    weekText: 'Sm', weekStatus: 'Semaine de l\'année',
    dayStatus: '\'Choisir\' le DD d MM',
    defaultStatus: 'Choisir la date',
    isRTL: false,
    defaultDate: '{{ date }}',
    onSelect: function () 
    {
      var date = options._formatDate($("#datepicker").datepicker('getDate'));
      var nb = $("#nb").val();
      var url = urlTemplate.replace('%DATE%',date).replace('%NB%',nb);
      window.location.href = url;      
    },
    beforeShowDay: function (date)
    {
      var dateStr = options._formatDate(date);
      if (typeof distributions[dateStr] == 'undefined')
         return [true,'',''];  
      return [true, "date-selected",dateStr]; 
    },
    _formatDate: function (date)
    {
        return date.getFullYear()+'-'+options._twoDigits(date.getMonth()+1)+'-'+options._twoDigits(date.getDate());
    },
    _twoDigits: function (num)
    {
      if (num<10)
        num = "0"+num;
      return num;
    }
};  
  
window.onload = function()
{
  $("#datepicker").datepicker(options);
  $("#nb").change(function () {
      var date = options._formatDate($("#datepicker").datepicker('getDate'));
      var nb = $("#nb").val();
      var url = urlTemplate.replace('%DATE%',date).replace('%NB%',nb);
      window.location.href = url;    
  });
};

var distributions = {{ distributions|json_encode(constant('JSON_NUMERIC_CHECK'))|raw }};
</script>